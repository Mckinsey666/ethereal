{"version":3,"sources":["utils/scrapeUtils.js","components/TextWrapper.js","graphql/queries.js","components/BookmarksList.js","components/FeedCard.js","globalEnum.js","containers/Feeds.js","graphql/mutations.js","components/BookmarksTable.js","components/UserCollection.js","containers/UserProfile.js","graphql/subscriptions.js","utils/bookmarkUtils.js","utils/urlValidateUtils.js","components/BookmarksAdd.js","components/CommentReply.js","components/CommentCard.js","components/CollectionCard.js","containers/MyProfile.js","components/UserCard.js","containers/UserSearchResults.js","App.js","containers/login/Login.js","containers/login/Register.js","pages/LoginRegister.js","OuterApp.js","serviceWorker.js","index.js"],"names":["require","styles","textField","width","TextWrapper","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","react_default","a","createElement","TextField","label","variant","style","onChange","handleChange","InputProps","endAdornment","adornment","React","Component","FEEDS_QUERY","gql","_templateObject","USER_COLLECTION_QUERY","_templateObject2","MY_PROFILE_QUERY","_templateObject3","SEARCH_USERS_QUERY","_templateObject4","_templateObject5","_templateObject6","_templateObject7","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","inline","display","BookmarksList","classes","bookmarks","console","log","List","className","map","bookmark","idx","title","icon","url","shortUrl","key","ListItem","alignItems","ListItemAvatar","Avatar","imgProps","src","ListItemText","primary","secondary","Fragment","Typography","component","color","Divider","createMuiTheme","typography","fontFamily","card","maxWidth","media","height","paddingTop","borderRadius","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","chip","margin","spacing","blueGrey","BookmarksCollectionCard","_React$useState","useState","_React$useState2","slicedToArray","expanded","setExpanded","_React$useState3","_React$useState4","clickId","setClickId","_props$collection","collection","author","id","description","tags","publishedTime","likes","userID","react_router","to","pathname","concat","currentUserId","ThemeProvider","Card","CardHeader","aria-label","AccountCircleOutlined_default","subheader","name","CardContent","CardActions","disableSpacing","IconButton","onClick","LabelImportantOutlined_default","clsx","defineProperty","aria-expanded","Tooltip","ExpandMore_default","tag","Chip","size","clickable","Collapse","in","timeout","unmountOnExit","COLLECTIONSTATE","PRIVATE","PUBLISHED","FAVORITE","Feeds","refetch","_this2","react_apollo_esm","query","_ref","loading","error","data","subscribeToMore","feedCards","collections","FeedCard","feedColumns","feeds","i","push","Array","length","marginBottom","LOGIN_MUTATION","mutations_templateObject","CREATE_USER_MUTATION","mutations_templateObject2","DELETE_BOOKMARK_MUTATION","mutations_templateObject3","UPDATE_COLLECTION_MUTATION","mutations_templateObject4","UPDATE_COLLECTION_STATE_MUTATION","mutations_templateObject5","ADD_BOOKMARK_MUTATION","mutations_templateObject6","IMPORT_COLLECTIONS_MUTATION","mutations_templateObject7","ADD_COLLECTION_MUTATION","_templateObject8","DELETE_COLLECTION_MUTATION","_templateObject9","desc","b","orderBy","headRows","disablePadding","EnhancedTableHead","onSelectAllClick","order","onRequestSort","numSelected","rowCount","TableHead","TableRow","row","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","property","event","marginTop","table","tableWrapper","overflowX","colorSwitchBase","yellow","&$colorChecked","& + $colorBar","EnhancedTable","deleteBookmarkFunc","setOrder","setOrderBy","_React$useState5","_React$useState6","selected","setSelected","_React$useState7","_React$useState8","page","setPage","_React$useState9","_React$useState10","dense","_React$useState11","_React$useState12","rowsPerPage","setRowsPerPage","emptyRows","Math","min","Paper","Table","aria-labelledby","target","checked","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","filter","includes","filterStr","isItemSelected","indexOf","hover","aria-checked","tabIndex","href","isSelf","mutation","deleteBookmark","variables","onDeleteBookmark","handleDeleteBookmark","Delete_default","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","_typography","flexGrow","textAlign","justifyContent","text","borderColor","outlineColor","&:hover","fontSize","typoStar","paddingRight","button","div","marginRight","div1","div2","div3","div4","div5","descriptionInput","UserCollection","whoAmI","searchVal","setSearchVal","Grid","container","justify","xs","sm","item","placeholder","type","startAdornment","Search_default","InputLabelProps","shrink","e","paragraph","updateCollection","Button","collectionId","onClickStore","addCollection","listItem","fontWeight","listItemText","listItemNum","rightAlign","UserProfile","chooseCollection","setState","currCollectionId","toggleFollow","prevState","following","undefined","_this$props","params","match","readOnlyError","location","toString","_data$user","user","find","publishedCollections","List_default","maxHeight","overflow","subscriptions_templateObject","subscriptions_templateObject2","subscriptions_templateObject3","$","parseBookmarkHtml","html","each","$a","attr","folder","getFolder","$node","closest","prev","keys","forEach","uuidv4","_ref2","validURL","str","RegExp","test","fab","dialog","Bookmark","addBookmarkFunc","open","setOpen","setTitle","setUrl","err","setErr","collectionTitle","handleTitleChange","handleUrlChange","trim","handleClickOpen","handleClose","handleAddBookmark","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","next","preventDefault","onAddBookmark","stop","_x","apply","arguments","addBookmark","Fab","Add_default","onSubmit","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","autoFocus","fullWidth","required","inputProps","helperText","DialogActions","form","red","deletedButton","titleInput","CollectionCard","updateCollectionFunc","deleteCollectionFunc","titleVal","setTitleVal","descriptionVal","setDescrptionVal","stateVal","setStateVal","publishTimeVal","setPublishTimeVal","deleteBool","setDeleteBool","_React$useState13","_React$useState14","setChange","useEffect","handleDescriptionChange","handleDelete","toggleState","now","Date","toLocaleString","handleCollectionUpdate","onSaveUpdate","deleteCollection","input","multiline","FileSaver","list","listItemIcon","leftAlign","MyProfile","private","published","favorite","favoriteCollectionId","handleOpen","prevOpen","onImport","file","files","reader","FileReader","onload","uploaded","result","importCollectionsFunc","readAsText","onExport","content","generateBookmarkHtml","blob","Blob","saveAs","hanleAddCollection","onAddCollection","addCollectionFunc","renderElem","privateCollection","publishedCollection","favoriteCollection","Archive_default","ExpandLess_default","LibraryBooks_default","Star_default","importCollections","accept","htmlFor","CloudUpload_default","CloudDownload_default","NoteAdd_default","iconButton","border","link","UserCard","react_router_dom","NearMeOutlined_default","UserSearchResults","searchStr","users","textDecoration","buttonLink","App","searchValue","handleSearchChange","clickSearch","onLogout","InputAdornment","exact","path","render","src_containers_Feeds","assign","containers_MyProfile","src_containers_UserProfile","src_containers_UserSearchResults","validator","Login","email","password","emptyEmail","emptyPassword","invalidEmail","loginStatus","onEmailInput","onPasswordInput","handleLogin","validateForm","loginCheckFunc","isEmail","loginCheck","warningMessage","status","onLogin","components_TextWrapper","Register","username","emptyUsername","imageUrl","dataUrl","successfulRegister","onUserInput","handleRegister","createUserFunc","onUpload","URL","createObjectURL","addEventListener","readAsDataURL","createUser","duplicateEmail","LoginRegister","icon_title","containers_login_Login","login_Register","OuterApp","loggedIn","sessionStorage","setItem","getItem","login","src_App_0","src_pages_LoginRegister","Boolean","window","hostname","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","split","definition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","restore","wrappedApp","src_OuterApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93c078b4.chunk.js","sourcesContent":["const rp = require(\"request-promise\");\nconst $ = require(\"cheerio\");\n\nfunction getUrlMetaData(url){\n    return rp(url)\n        .then(html => {\n            const metas = $(\"meta\", html);\n            const links = $(\"link\", html);\n\n            const result = {\n                description: \"\",\n                favicon: \"\",\n            }\n\n            for(let i = 0; i < metas.length; ++i){\n                if(metas[i].attribs.name){\n                    if(metas[i].attribs.name.includes(\"description\")){\n                        result[\"description\"] = metas[i].attribs.content;\n                        break;\n                    }\n                }\n            }\n            //console.log(links);\n            for(let i = 0; i < links.length; ++i){\n                if(links[i].attribs.rel){\n                    if(links[i].attribs.rel.includes(\"icon\")){\n                        result[\"favicon\"] = links[i].attribs.href;\n                        break;\n                    }\n                }\n            }\n            return result;\n        })\n        .catch(err => {console.log(err);});\n}\n\n//const url = 'https://www.mainstreetroi.com/where-are-the-webpage-titles-descriptions-and-headers/';\n//getUrlMetaData(url).then(ret => console.log(ret)).catch(err => console.log(err));","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = {\n\ttextField: {\n        width: \"100%\",\n    },\n}\n\nclass TextWrapper extends React.Component {\n\tconstructor(props){\n\t  super(props);\n\t  this.state = {\n            value: \"\",\n        }\n\t}\n  \n\trender(){\n\t  return(\n\t\t<div>\n            <TextField\n                label={this.props.label}\n                variant=\"outlined\"\n                style={styles.textField}\n                value={this.props.value}\n                onChange={this.props.handleChange}\n                InputProps={{\n                    endAdornment: (\n                        this.props.adornment\n                    )\n                }}\n\t\t    />\n\t\t</div>\n\t  );\n\t}\n}\n\nexport default TextWrapper;","import { gql } from 'apollo-boost';\n\n// export const FEEDS_QUERY = gql`\n//     query user(\n//         $userID: String!    \n//     )\n//     {\n//         user(\n//             userID: $userID\n//         ) {\n//             following {\n//                 name\n//                 avatar\n//                 collections (\n//                     queryPublished: true\n//                 ) {\n//                     id\n//                     title\n//                     description\n//                     likes\n//                     tags\n//                     bookmarks {\n//                         title\n//                         description\n//                         url\n//                         icon\n//                         shortUrl\n//                     }\n//                     publishedTime\n//                 }\n//             }\n//         }\n//     }\n// `\nexport const FEEDS_QUERY = gql`\nquery {\n    collections{\n        id\n        title\n        description\n        likes\n        tags\n        bookmarks {\n            id\n            title\n            description\n            url\n            icon\n            shortUrl\n        }\n        publishedTime\n        author {\n            id\n            name\n            avatar\n        }\n    }\n}`\n\nexport const USER_COLLECTION_QUERY = gql`\n    query user($userID: String!){\n        user(\n            userID: $userID\n        ){\n            collections {\n                state\n            }\n        }\n    }\n`\n\nexport const MY_PROFILE_QUERY = gql`\nquery user($userID: String!){\n    user(\n        userID: $userID\n    ){\n        name\n        avatar\n        followers {\n            name\n            avatar\n        }\n        following {\n            name\n            avatar\n        }\n        collections {\n            id\n            title\n            description\n            likes\n            tags\n            bookmarks {\n                id\n                title\n                description\n                url\n                icon\n                shortUrl\n            }\n            state\n            publishedTime      \n        }\n    }\n}\n`\n\nexport const ADD_COLLECTION_QUERY = gql`\n    query collections(\n        $collectionId: String\n    ){\n        collections(\n            collectionId: $collectionId\n        ){\n            title\n            description\n            tags \n        }\n    }\n`\n\nexport const SEARCH_COLLECTIONS_QUERY = gql`\n    query collections(\n        $title: String\n        $collectionId: String\n    ){\n        collections(\n            title: $title\n            collectionId: $collectionId\n        ){\n            id\n            title\n            description\n            likes\n            tags\n            bookmarks {\n                id\n                title\n                description\n                url\n                icon\n                shortUrl\n            }\n            publishedTime\n            author {\n                name\n                avatar\n            }\n        }\n    }\n`\n\nexport const SEARCH_USERS_QUERY = gql`\n    query users(\n            $name: String!\n        ){\n            users(\n                name: $name\n            ){\n                id\n                name\n                avatar\n            }\n        }\n`\n\nexport const SEARCH_USERS_COLLECTIONS_QUERY = gql`\n    query userCollections(\n        $userID: String!\n    ){\n        userCollections(\n            userID: $userID\n        ){\n            id\n        }\n    }\n`","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n  \nexport default function(props){\n    const classes = useStyles()\n    const bookmarks = props.bookmarks\n    console.log(bookmarks)\n    return (\n        <List className={classes.root}>\n          {bookmarks.map((bookmark, idx) => {\n              const {title, icon, url, shortUrl} = bookmark\n              return(\n                  <div key={idx}>\n                    <ListItem alignItems=\"flex-start\">\n                        <ListItemAvatar>\n                            <Avatar imgProps={{title: url}} src={icon}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                        primary={title}\n                        secondary={\n                            <React.Fragment>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                className={classes.inline}\n                                color=\"textSecondary\"\n                            >\n                            {shortUrl}\n                            </Typography>\n                            </React.Fragment>\n                        }\n                        />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </div>\n              )\n          })}  \n        </List>\n      );\n}\n","import React from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { blueGrey } from '@material-ui/core/colors';\nimport { Button, CardActionArea } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nimport AccountIcon from '@material-ui/icons/AccountCircleOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport GotoIcon from '@material-ui/icons/LabelImportantOutlined';\nimport { Redirect } from 'react-router-dom';\n\n\nimport BookmarksList from './BookmarksList';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: 'Quicksand',\n        color: \"#4E5167\",\n    },\n})\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        maxWidth: '1',\n    },\n    media: {\n        height: 0,\n        paddingTop: '100%', // 16:9\n        borderRadius: '1px'\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: \"#4E5167\",\n    },\n    // button: {\n    //     margin: theme.spacing(1),\n    //     color: \"#4E5167\",\n    //     borderColor: \"#4E5167\",\n    // },\n    chip: {\n        margin: theme.spacing(1),\n        backgroundColor: blueGrey[100],\n    },\n}));\n\nconst BookmarksCollectionCard = (props) => {\n    const classes = useStyles(theme);\n    const [expanded, setExpanded] = React.useState(false);\n    const [clickId, setClickId] = React.useState(null);\n\n    const { id, author, title, description, bookmarks, tags, likes, publishedTime } = props.collection;\n    // const {onClick} = props.function\n\n    function handleExpandClick() {\n        setExpanded(!expanded);\n    }\n\n    function onClickVisit(){\n        setClickId(author.id);\n        console.log(\"authorID\", author.id);\n    }\n    \n    if(clickId) {\n        if(clickId === props.userID) return <Redirect to={{pathname:\"/myprofile\", id: clickId}}/>\n        return <Redirect to={{pathname:`/user/${clickId}`, currentUserId: clickId}} />\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Card className={classes.card}>\n            <CardHeader\n                avatar={\n                    author.avatar ?\n                    <Avatar aria-label=\"author\" className={classes.avatar} src={author.avatar} />\n                    :<Avatar className={classes.avatar}><AccountIcon className={classes.icon}/></Avatar>\n                }\n                title={title}\n                subheader={`Published by ${author.name}. At ${publishedTime}.`}\n            />\n                <Divider variant=\"inset\" />\n            <CardContent>\n                <Typography variant='body2' color='textSecondary'> Description </Typography>\n                <Typography variant='body1' color='textPrimary'  > {description} </Typography>\n            </CardContent>\n\n            <CardActions disableSpacing>\n                {/* <Tooltip title='Save to your favorite bookmarks'>\n                    <Button variant='outlined' size='small' \n                    className={classes.button}\n                    > Save </Button>                \n                </Tooltip> */}\n\n                <IconButton onClick={onClickVisit}>\n                    <GotoIcon />\n                </IconButton>\n                <Typography> {\"Visit user profile\"} </Typography>\n                <IconButton\n                className={clsx(classes.expand, {\n                    [classes.expandOpen]: expanded,\n                })}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"Show more\"\n                >\n                <Tooltip title='Expand to see bookmarks'>\n                    <ExpandMoreIcon />\n                </Tooltip>       \n                </IconButton>\n            </CardActions>\n            <Divider variant='middle'/>\n            <CardContent>\n                <Typography variant='body2' color='textSecondary'>\n                    Tags\n                    {tags.map((tag, idx) => \n                        <Chip\n                        id={idx}\n                        size=\"small\"\n                        label={tag}\n                        clickable\n                        className={classes.chip}\n                        />\n                    )}\n                </Typography>\n            </CardContent>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <CardContent> <BookmarksList bookmarks={bookmarks} /> </CardContent>\n            </Collapse>\n            </Card>\n        </ThemeProvider>\n        \n    );\n}\nexport default BookmarksCollectionCard;","export const COLLECTIONSTATE = {\n    PRIVATE: -1,\n    PUBLISHED: 1,\n    FAVORITE: 0,\n}","import React from 'react';\nimport { Query, Mutation } from 'react-apollo'\nimport { FEEDS_QUERY } from './../graphql/queries'\nimport FeedCard from '../components/FeedCard';\nimport Divider from '@material-ui/core/Divider';\nimport { COLLECTIONSTATE } from '../globalEnum';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport DownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport './Feeds.css';\n\n\nclass Feeds extends React.Component {\n    constructor(props){\n      super(props)\n      this.refetch = null\n    }\n\n    componentDidMount(){\n      if(this.refetch) this.refetch();\n    }\n\n    render(){\n      const { id } = this.props // Given userID render one's following feeds\n    \n      return(\n        <Query query={FEEDS_QUERY} >\n          { ({ loading, error, data, subscribeToMore, refetch}) => {\n            if (loading) return <p>Loading...</p>\n            if (error) return <p>Error :(((</p>\n            this.refetch = refetch\n\n            const feedCards = data.collections.map((collection, idx) => {\n              return(\n                <div key={idx} className=\"Feedcard-container\"> \n                    <FeedCard userID={id} collection={collection} />\n                </div>)\n            })\n            const columnsNum = 3\n            let feedColumns = []\n            let feeds = []\n            for(let i=0 ; i < columnsNum ; ++i)\n              feedColumns.push(Array(0))\n            for(let i=0 ; i < feedCards.length ; ++i)\n              feedColumns[i%columnsNum].push(feedCards[i])\n            for(let i=0 ; i < feedColumns.length ; ++i)\n              feeds.push(\n                <div key={i} className=\"Feeds-row\">\n                  { feedColumns[i] }\n                </div>\n              )\n            return (\n              <div className=\"Feeds animated fadeIn slow\">\n                <div className=\"Feeds-title\">Feeds</div>\n                <Divider style={{marginBottom: \"20px\"}}/>\n                <div className=\"Feeds-flex-container\">\n                    <div className=\"Feeds-margin-block\"></div>\n                      {feeds}\n                    <div className=\"Feeds-margin-block\"></div>\n                </div>\n                <Divider style={{marginBottom: \"20px\"}}/>\n                </div>\n            )\n            }\n          }\n        </Query>\n      )\n    }\n}\n\nexport default Feeds;","import { gql } from 'apollo-boost'\n\nconst LOGIN_MUTATION = gql`\n    mutation loginCheck(\n        $email: String!\n        $password: String!\n    ){\n        loginCheck(\n            data: {\n                email: $email\n                password: $password\n            }\n        ){\n            status\n            id\n        }\n    }\n`\nconst CREATE_USER_MUTATION = gql`\n    mutation createUser(\n        $id: String!\n        $name: String!\n        $email: String!\n        $password: String!\n        $avatar: String!\n    ){\n        createUser(\n            data: {\n                id: $id\n                name: $name\n                email: $email\n                password: $password\n                avatar: $avatar\n            }\n        ){\n            status\n        }\n    }\n`\n\nconst DELETE_BOOKMARK_MUTATION = gql`\n    mutation deleteBookmark(\n        $id: String!\n    ){\n        deleteBookmark(\n            id: $id\n        ){\n            id\n            title\n            description\n            url\n            icon\n            shortUrl\n        }\n    }\n`\nconst UPDATE_COLLECTION_MUTATION = gql`\n    mutation updateCollection(\n        $collectionId: String!\n        $title: String!\n        $description: String!\n        $state: Int!\n        $publishedTime: String\n    ){\n        updateCollection(\n            collectionId: $collectionId\n            data: {\n                title: $title\n                description: $description\n                state: $state\n                publishedTime: $publishedTime\n            }\n        ){\n            id\n            title\n        }\n    }\n`\n\nconst UPDATE_COLLECTION_STATE_MUTATION = gql`\n    mutation updateCollection(\n        $collectionId: String!\n        $state: Int!\n    ){\n        updateCollection(\n            collectionId: $collectionId\n            data: {\n                state: $state\n            }\n        ){\n            id\n            title\n        }\n    }\n`\n\nconst ADD_BOOKMARK_MUTATION = gql`\n    mutation addBookmark(\n        $collectionId: String!\n        $url: String!\n        $title: String!\n    ){\n        addBookmark(\n            collectionId: $collectionId\n            data: {\n                url: $url\n                title: $title\n            }\n        ){\n            id\n            title\n            description\n            url\n            icon\n            shortUrl\n        }\n    }\n`\n\nconst IMPORT_COLLECTIONS_MUTATION = gql`\n    mutation importCollections(\n        $userID: String!\n        $collections: [CollectionInput!]\n    ){\n        importCollections(\n            userID: $userID\n            data: {\n                collections: $collections\n            }\n        )\n    }\n`\n\nconst ADD_COLLECTION_MUTATION = gql`\n    mutation addCollection(\n        $userID: String!\n        $collectionId: String\n        $collections: favoriteCollectionInput\n    ){\n        addCollection(\n            userID: $userID\n            collectionId: $collectionId\n            data: {\n                collections: $collections\n            }\n        )\n    }\n`\n\nconst DELETE_COLLECTION_MUTATION = gql`\n    mutation deleteCollection(\n        $collectionId: String!\n    ){\n        deleteCollection(\n            collectionId: $collectionId\n        )\n    }\n`\n\nexport { ADD_BOOKMARK_MUTATION,\n        DELETE_BOOKMARK_MUTATION,\n        IMPORT_COLLECTIONS_MUTATION, \n        ADD_COLLECTION_MUTATION, \n        DELETE_COLLECTION_MUTATION,\n        UPDATE_COLLECTION_MUTATION,\n        UPDATE_COLLECTION_STATE_MUTATION,\n        CREATE_USER_MUTATION,\n        LOGIN_MUTATION\n    };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Avatar from '@material-ui/core/Avatar';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { yellow } from '@material-ui/core/colors'\nimport { Mutation } from 'react-apollo';\nimport {DELETE_BOOKMARK_MUTATION} from '../graphql/mutations';\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headRows = [\n  { id: 'favicon', icon: true, disablePadding: false, label: '' },\n  { id: 'title', icon: false, disablePadding: true, label: 'Title' },\n  { id: 'description', icon: false, disablePadding: false, label: 'Description' },\n  { id: 'shortUrl', icon: false, disablePadding: false, label: 'Provided by' },\n  { id: 'function', icon: true, disablePadding: false, label: '' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headRows.map(row => (\n          <TableCell\n            key={row.id}\n            align={row.icon ? 'justify' : 'left'}\n            padding={row.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === row.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === row.id}\n              direction={order}\n              onClick={createSortHandler(row.id)}\n            >\n              {row.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  colorSwitchBase: {\n    color: yellow[300],\n    '&$colorChecked': {\n      color: yellow[500],\n      '& + $colorBar': {\n        backgroundColor: yellow[500],\n      },\n    },\n  }\n}));\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const bookmarks = props.bookmarks\n  var deleteBookmarkFunc\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      const newSelecteds = bookmarks.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }\n\n  function handleClick(event, name) {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n  }\n\n  function handleChangeDense(event) {\n    setDense(event.target.checked);\n  }\n\n  const handleDeleteBookmark = id => {\n    console.log(id);\n    deleteBookmarkFunc({\n      variables: {\n        id: id\n      }\n    })\n    props.onDeleteBookmark();\n  }\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, bookmarks.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={bookmarks.length}\n            />\n            <TableBody>\n              {stableSort(bookmarks, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .filter(bookmark => bookmark.title.includes(props.filterStr))\n                .map((bookmark, index) => {\n                  const { id, title, description, shortUrl, url, icon } = bookmark\n                  const isItemSelected = isSelected(title);\n\n                  return (\n                    <TableRow\n                      hover\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={title}\n                      selected={isItemSelected}\n                    >\n                      <TableCell align=\"justify\">\n                        <Avatar imgProps={{title: url}} src={icon}/>\n                      </TableCell>\n                      <TableCell align=\"left\"><a href={url} target='_blank'> {title} </a></TableCell>\n                      <TableCell align=\"left\">{description}</TableCell>\n                      <TableCell align=\"left\">{shortUrl}</TableCell>\n                      <TableCell align='justify'>\n                        {props.isSelf?(<Tooltip title='Delete'>\n                          <Mutation mutation={DELETE_BOOKMARK_MUTATION}>\n                            { \n                              deleteBookmark => {\n                                deleteBookmarkFunc = deleteBookmark;\n                                return(\n                                  <IconButton aria-label=\"Delete\" onClick={() => handleDeleteBookmark(id)}>\n                                    <DeleteIcon />\n                                  </IconButton>\n                                  )\n                              }\n                            }\n                          </Mutation>\n                        </Tooltip>):<div></div>}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={bookmarks.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blueGrey } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport BookmarksTable from './BookmarksTable';\n\nimport { Query, Mutation } from 'react-apollo';\nimport { ADD_COLLECTION_MUTATION, UPDATE_COLLECTION_STATE_MUTATION } from '../graphql/mutations';\nimport { COLLECTIONSTATE } from '../globalEnum';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'left',\n      display: 'column',\n      justifyContent: 'center',\n      color: theme.palette.text.secondary,\n      width: '90%',\n      margin: \"0 auto\"\n    },\n    textField: {\n        borderColor: \"#4E5167\",\n        color: \"#4E5167\",\n        outlineColor:  \"#4E5167\",\n        '&:hover': {\n            color: \"#4E5167\",\n        },\n    },\n    typography :{\n        fontSize: \"1.5em\",\n        color: \"#4E5167\",\n        fontSize: '2em',\n        fontFamily: 'Quicksand'\n    },\n    typoStar: {\n        paddingRight: '10px'\n    },\n    chip: {\n        margin: theme.spacing(1),\n        backgroundColor: blueGrey[100],\n    },\n    button: {\n        borderColor: blueGrey[100],\n        color: \"#4E5167\",\n        borderColor: \"#4E5167\",\n    },\n    div: {\n        display: 'flex', \n        justifyContent: 'left',\n        marginRight: 'auto'\n    },\n    div1: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        //paddingBottom: '10px'\n        width: \"100%\"\n    },\n    div2: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    div3: {\n        display: 'flex', \n        justifyContent: 'left',\n        marginRight: 'auto'\n    },\n    div4: {\n        display: 'flex',\n        direction: 'row',\n        alignItems: 'center'\n    },\n    div5 : {\n        width: '100%',\n        height: '15px',\n    },\n    title: {\n        fontFamily: \"Quicksand\",\n        fontSize: \"2em\",\n        color: \"#4E5167\",\n    },\n    descriptionInput: {\n        width: \"50%\"\n    }\n  }));\n\nexport default function UserCollection (props) {\n    const classes = useStyles();\n    const {id, title, description, bookmarks, tags, publishedTime, state} = props.collection\n    const { whoAmI, userID } = props\n\n    console.log(\"inside\", props.collection);\n    const [searchVal, setSearchVal] = React.useState(\"\");\n\n    function handleChange(e){\n        setSearchVal(e.target.value);\n    }\n    return (\n      <div style={{width:\"100%\"}}className={classes.root}>\n                <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                    <Grid container xs={12} sm={12}> \n                        <Paper className={classes.paper}>\n                            <Grid item xs={12}>     \n                                <div className={classes.div1}>\n                                    <div className={classes.div}>\n                                        <div className={classes.title}>{title}</div>\n                                    </div>\n                                    <TextField\n                                        id=\"outlined-search\"\n                                        placeholder='Search in Collection'\n                                        type=\"search\"\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        InputProps={{\n                                            startAdornment: <IconButton> <SearchIcon /> </IconButton>\n                                        }}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={handleChange}\n                                        value={searchVal}\n                                    />\n                                </div>\n                                <Typography variant='body2' color='textSecondary' paragraph>\n                                    Tags\n                                    {tags.map(tag => \n                                        <Chip\n                                        size=\"small\"\n                                        label={tag}\n                                        clickable\n                                        className={classes.chip}\n                                    />)}\n                                    <Divider variant='middle'/>\n                                </Typography>\n\n                                <Typography variant='body2' color='textSecondary' > Published Date </Typography>\n                                <Typography variant='body1' color='textPrimary' paragraph>\n                                    <div className={classes.div3}>\n                                        <div className={classes.div3}> {publishedTime} </div>\n                                            {\n                                                whoAmI === 'Me'?\n                                               <Mutation mutation={UPDATE_COLLECTION_STATE_MUTATION} >\n                                                {   updateCollection => {\n                                                    return( \n                                                        <Tooltip title={`Add \\'${title}\\' to your private collection`}>\n                                                        <Button variant='outlined' size='medium' \n                                                                className={classes.button} \n                                                                onClick={event => {\n                                                                    updateCollection({\n                                                                        variables:{\n                                                                            collectionId: id,\n                                                                            state: COLLECTIONSTATE.PRIVATE\n                                                                        }\n                                                                    });\n                                                                    props.onClickStore();\n                                                                }    \n                                                            } \n                                                        >\n                                                            Store Up\n                                                        </Button>\n                                                        </Tooltip>)  \n                                                    }\n                                                }\n                                                </Mutation>:\n                                                <Mutation mutation={ADD_COLLECTION_MUTATION} >\n                                                {   addCollection => {\n                                                    console.log(bookmarks);\n                                                    return( \n                                                        <Tooltip title={`Add \\'${title}\\' to your favorite collection`}>\n                                                        <Button variant='outlined' size='medium' className={classes.button} onClick={event => {\n                                                            addCollection({\n                                                                variables:{\n                                                                    userID: userID,\n                                                                    collectionId: id,\n                                                                    collections: {\n                                                                        title: title,\n                                                                        description: description,\n                                                                        tags: tags,\n                                                                        bookmarks: bookmarks.map(bookmark => {\n                                                                            delete bookmark[\"__typename\"];\n                                                                            return bookmark;\n                                                                        })\n                                                                    },\n                                                                }\n                                                            })\n                                                            //props.onClickFavorite();    \n                                                        }\n                                                        } >\n                                                            Favorite\n                                                        </Button>\n                                                        </Tooltip>)  \n                                                    }\n                                                }\n                                                </Mutation>\n                                            }\n                                           \n                                        \n                                        <div style={{marginLeft: \"2%\"}}></div>\n                                    </div>\n                                </Typography>\n\n                                <Typography variant='body2' color='textSecondary'> Description </Typography>\n                                <Typography variant='body1' color='textPrimary' paragraph>{description}</Typography> \n                                <div className={classes.div2}>\n                                    <div className={classes.div3}> <Typography variant='body2' color='textSecondary'> Bookmarks </Typography> </div>               \n                                </div>\n                                <BookmarksTable \n                                    filterStr={searchVal} \n                                    bookmarks={bookmarks}\n                                    isSelf={false}>\n                                </BookmarksTable>\n                            </Grid>\n                        </Paper>  \n                    </Grid>\n                </Grid>\n        </div>\n    );\n  }","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListIcon from '@material-ui/icons/List';\nimport AccountIcon from '@material-ui/icons/AccountCircleOutlined';\n\nimport { MY_PROFILE_QUERY } from './../graphql/queries'\nimport List from '@material-ui/core/List'; \nimport './UserProfile.css';\nimport { ListItem } from '@material-ui/core';\nimport { Query } from 'react-apollo';\n\nimport UserCollection from '../components/UserCollection';\nimport { COLLECTIONSTATE } from '../globalEnum';\n\n\nconst styles = {\n    avatar: {\n        width: \"240px\",\n        height: \"240px\"\n    },\n    icon: {\n        fontSize: \"20px\"\n    },\n    listItem: {\n        fontSize: \"18px\",\n        fontFamily: \"Quicksand\",\n        fontWeight: \"100\"\n    },\n    listItemText: {\n        width: \"50%\",\n    },\n    listItemNum: {\n        marginRight: \"0\",\n        marginLeft: \"auto\",\n        color: \"rgb(183, 183, 183)\"\n    },\n    rightAlign: {\n        marginRight: \"0\",\n        marginLeft: \"auto\"\n    }\n}\n\nclass UserProfile extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currCollectionId: undefined,\n            following: true\n        }\n    }\n    \n\n    chooseCollection = id => {\n        this.setState({\n            currCollectionId: id,\n        })\n    }\n\n    toggleFollow = () => {\n        this.setState(prevState => ({\n            following: !prevState.following\n        }))\n    }\n    render(){\n        const { match: { params }, currentUserId } = this.props;\n        if(!currentUserId) currentUserId = this.props.location.currentUserId;\n        return(\n            <Query query={MY_PROFILE_QUERY} variables={{userID: params.id.toString()}} >\n                { ({ loading, error, data, subscribeToMore, refetch}) => {\n                    if (loading) return <p>Loading...</p>\n                    if (error) return <p>Error :(((</p>\n                    var { name, avatar, collections } = data.user\n                    const collection = collections.find(collection => collection.id === this.state.currCollectionId);\n                    const publishedCollections = collections.filter(collection => collection.state === COLLECTIONSTATE.PUBLISHED);\n                    //console.log(publishedCollection);\n                    return(\n                    <div className=\"UserProfile animated fadeIn slow\">\n                        <div className=\"UserProfile-flex-container\">\n                            <div className=\"UserProfile-margin-block\" ></div>\n                            <div className=\"UserProfile-left\" >\n                                <div className=\"inner-container\">\n                                    {\n                                        avatar?\n                                        <Avatar src={avatar} style={styles.avatar}/>:\n                                        <Avatar style={styles.avatar}><AccountIcon style={styles.avatar}/></Avatar>\n                                    }\n                                    <div className=\"follows-container\">\n                                        <div className=\"top-block\">{name}</div>\n                                        <div className=\"block\">\n                                            <div><ListIcon style={styles.icon} /></div>\n                                            <div style={styles.rightAlign}>{publishedCollections.length} Collections</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"public-card-container\">\n                                    {collection?<UserCollection collection={collection} userID={currentUserId.toString()}/>:<div></div>}\n                                </div>\n                            </div>\n                            <div className=\"UserProfile-right\" >\n                                <div className=\"top-block\">\n                                    Collections\n                                </div>\n                                <List style={{maxHeight: \"100%\", width: \"80%\", overflow: \"auto\"}}>\n                                    {\n                                        publishedCollections.map((item, idx) => \n                                            <ListItem \n                                                button \n                                                key={idx}\n                                                style={styles.listItem}\n                                                onClick={() => this.chooseCollection(item.id)}\n                                            >\n                                                <div style={styles.listItemText}>{item.title}</div>\n                                                <div style={styles.listItemNum}>{item.bookmarks.length}</div>\n                                            </ListItem>)\n                                    }\n                                </List>\n                            </div>\n                            <div className=\"UserProfile-margin-block\" ></div>\n                        </div>\n                    </div>)\n                }}\n            </Query>\n        )\n    }\n}\n\nexport default UserProfile;","import { gql } from 'apollo-boost'\n\nconst DELETE_BOOKMARK_SUBSCRIPTION = gql`\n    subscription{\n        deleteBookmarkSub{\n            data{\n                collectionId\n                id\n                title\n                description\n                url\n                icon\n                shortUrl\n            }\n        }\n    }\n`\nconst IMPORT_COLLECTION_SUBSCRIPTION = gql`\n    subscription{\n        importCollectionSub{\n            bookmarks{\n                collectionId\n                id\n                title\n                description\n                url\n                icon\n                shortUrl\n            }\n            collections{\n                id\n                title\n                description\n                tags\n                state\n                publishedTime\n            }\n        }\n    }\n`\nconst ADD_BOOKMARK_SUBSCRIPTION = gql`\n    subscription{\n        addBookmarkSub {\n            data{\n                collectionId\n                id\n                title\n                description\n                url\n                icon\n                shortUrl\n            }\n        }\n    }\n`\n\nexport { ADD_BOOKMARK_SUBSCRIPTION, IMPORT_COLLECTION_SUBSCRIPTION, DELETE_BOOKMARK_SUBSCRIPTION};","import uuidv4 from 'uuid/v4';\nimport { COLLECTIONSTATE } from '../globalEnum';\nimport { getUrlMetaData } from './scrapeUtils';\nconst $ = require(\"cheerio\");\n\nfunction parseBookmarkHtml(html){\n    var bookmarks = {};\n    $(\"a\", html).each((index, a) => {\n        var $a = $(a);\n        var title = $a.text();\n        var url = $a.attr(\"href\");\n        var folder = getFolder($a);\n        if(!bookmarks[folder]) bookmarks[folder] = []\n        bookmarks[folder].push([title, url]);\n        console.log('url: ', url)\n    });\n    var collections = [];\n    Object.keys(bookmarks).forEach(folder => {\n        var collection = {};\n        collection.id = uuidv4();\n        collection.author = {name: \"Brian\", avatar: \"hello.com\" };\n        collection.title = folder;\n        collection.description = \"\";\n        collection.tags = [];\n        collection.state = COLLECTIONSTATE.PRIVATE;\n        collection.publishedTime = null;\n        collection.bookmarks = bookmarks[folder].map(([title, url]) => {\n            return {\n                id: uuidv4(),\n                title: title,\n                url: url,\n                icon: \"\",\n                shortUrl: \"\",\n                description: \"\"\n            }\n        })\n        collections.push(collection);\n    })\n    return collections;\n}\n\nfunction generateBookmarkHtml(collections){\n    var content = '<!DOCTYPE NETSCAPE-Bookmark-file-1><HTML><META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=UTF-8\"><Title>Bookmarks</Title><H1>Bookmarks</H1>';\n    collections.forEach(collection => {\n        content += (`<DT><H3 FOLDED>${collection.title}</H3><DL><p>`);\n        collection.bookmarks.forEach(bookmark => {\n            content += (`<DT><A HREF=\"${bookmark.url}\">${bookmark.title}</A>`);\n        })\n        content += '</DL><p>';\n    })\n    content += '</HTML>';\n    return content;\n}\n\n//onst html = '<!DOCTYPE NETSCAPE-Bookmark-file-1><HTML><META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=UTF-8\"><Title>Bookmarks</Title><H1>Bookmarks</H1><DT><H3 FOLDED>Favorites</H3><DL><p><DT><A HREF=\"https://www.apple.com/\">Apple</A><DT><A HREF=\"https://www.icloud.com/\">iCloud</A><DT><A HREF=\"https://www.yahoo.com/\">Yahoo</A><DT><A HREF=\"https://www.bing.com/\">Bing</A><DT><A HREF=\"https://www.google.com/?client=safari&channel=mac_bm\">Google</A><DT><A HREF=\"https://www.wikipedia.org/\">Wikipedia</A><DT><A HREF=\"https://www.facebook.com/\">Facebook</A><DT><A HREF=\"https://twitter.com/\">Twitter</A><DT><A HREF=\"https://www.linkedin.com/\">LinkedIn</A><DT><A HREF=\"https://www.weather.com/\">The Weather Channel</A><DT><A HREF=\"https://www.yelp.com/\">Yelp</A><DT><A HREF=\"https://www.tripadvisor.com/\">TripAdvisor</A></DL><p><DT><H3 FOLDED>Bookmarks Menu</H3><DL><p></DL><p><DT><H3 FOLDED>Security</H3><DL><p><DT><A HREF=\"https://techblog.bozho.net/user-authentication-best-practices-checklist/\">User Authentication Best Practices Checklist - Bozho\\'s tech blog</A></DL><p><DT><H3 FOLDED>Machine Learning</H3><DL><p></DL><p><DT><H3 FOLDED>Web</H3><DL><p><DT><A HREF=\"https://tylermcginnis.com/react-router-pass-props-to-components/\">Pass props to a component rendered by React Router</A><DT><A HREF=\"https://medium.com/a-beginners-guide-for-webpack-2/webpack-loaders-css-and-sass-2cc0079b5b3a\">webpack loaders</A><DT><A HREF=\"https://www.robinwieruch.de/react-warning-cant-call-setstate-on-an-unmounted-component/\">state update on unmounted component</A><DT><A HREF=\"https://stackoverflow.com/questions/34972072/how-to-send-image-to-server-with-http-post-in-javascript-and-store-base64-in-mon\">send image to node server</A><DT><A HREF=\"https://medium.com/@dcai900/how-to-refresh-data-when-using-react-router-link-396a2ddf8373\">react router refreshing</A><DT><A HREF=\"https://medium.com/createdd-notes/starting-with-authentication-a-tutorial-with-node-js-and-mongodb-25d524ca0359\">Starting with Authentication (A tutorial with Node.js and MongoDB)</A><DT><A HREF=\"https://www.apollographql.com/docs/react/\">Introduction - Apollo Docs</A><DT><A HREF=\"https://www.freecodecamp.org/news/how-to-set-up-a-graphql-server-using-node-js-express-mongodb-52421b73f474/\">How to set up a GraphQL Server using Node.js, Express &amp; MongoDB</A><DT><A HREF=\"https://medium.com/@bob800530/selenium-1-%E9%96%8B%E5%95%9Fchrome%E7%80%8F%E8%A6%BD%E5%99%A8-21448980dff9\">[網路爬蟲]運用selenium開啟chrome瀏覽器 – 天道酬勤 – Medium</A><DT><A HREF=\"https://www.hongkiat.com/blog/automate-create-login-bot-python-selenium/\">How to Build a Simple Auto-Login Bot with Python and Selenium - Hongkiat</A></DL><p><DT><H3 FOLDED>Python</H3><DL><p><DT><A HREF=\"https://medium.com/@trstringer/the-easy-and-nice-way-to-do-cli-apps-in-python-5d9964dc950d\">The easy (and nice) way to do CLI apps in Python – Thomas Stringer – Medium</A><DT><A HREF=\"https://python-packaging.readthedocs.io/en/latest/index.html\">How To Package Your Python Code — Python Packaging Tutorial</A><DT><A HREF=\"https://docs.python.org/3/library/pickle.html\">pickle — Python object serialization — Python 3.7.3 documentation</A></DL><p><DT><H3 FOLDED>Javascript</H3><DL><p><DT><A HREF=\"https://stackoverflow.com/questions/22172604/convert-image-url-to-base64\">image url to base64</A></DL><p><DT><H3 FOLDED>Misc</H3><DL><p><DT><A HREF=\"https://medium.com/statementdog-engineering/prettify-your-zsh-command-line-prompt-3ca2acc967f\">zsh setup</A><DT><A HREF=\"https://askubuntu.com/questions/821157/print-a-256-color-test-pattern-in-the-terminal\">command line - Print a 256-color test pattern in the terminal - Ask Ubuntu</A><DT><A HREF=\"https://opensource.com/resources/what-docker\">What is Docker? | Opensource.com</A></DL><p><DT><H3 FOLDED>Systems</H3><DL><p><DT><A HREF=\"https://unix.stackexchange.com/questions/8656/usr-bin-vs-usr-local-bin-on-linux\">filesystems - /usr/bin vs /usr/local/bin on Linux - Unix &amp; Linux Stack Exchange</A></DL><p><DT><H3 FOLDED>untitled folder</H3><DL><p></DL><p><DT><H3 FOLDED>Computer Vision</H3><DL><p><DT><A HREF=\"https://zhuanlan.zhihu.com/p/52650744\">生成对抗网络系列——NIPS2018中的图像转化GAN - 知乎</A><DT><A HREF=\"https://zhuanlan.zhihu.com/p/36436452\">【CVPR2018】GAN相关论文汇总 - 知乎</A><DT><A HREF=\"https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_morphological_ops/py_morphological_ops.html\">Morphological Transformations — OpenCV-Python Tutorials 1 documentation</A></DL><p><DT><H3 FOLDED>Food and Fun</H3><DL><p><DT><A HREF=\"http://life365.pixnet.net/blog/post/152874138-%5B%E8%BD%89%E8%BC%89%5D-%E5%8F%B0%E5%8C%97%E6%83%85%E4%BE%B6%E6%9C%80%E9%81%A9%E5%90%88%E7%9A%84%E7%B4%84%E6%9C%83%E8%81%96%E5%9C%B0%EF%BC%81%E5%90%90%E8%A1%80%E6%95%B4%E7%90%86\">[轉載] 台北情侶最適合的約會聖地！吐血整理！ @ life365的部落格 :: 痞客邦 ::</A></DL><p><DT><H3 FOLDED>Articles and Food for Thought</H3><DL><p><DT><A HREF=\"https://www.ptt.cc/bbs/Boy-Girl/M.1471758435.A.5BF.html\">[求助] 剛交往 不知如何相處 - 看板 Boy-Girl - 批踢踢實業坊</A></DL><p><DT><H3 FOLDED>Personal</H3><DL><p><DT><A HREF=\"https://mentorcruise.com/learn/most-exciting-upcoming-python-libraries-2019/\">The most exciting upcoming Python Libraries of 2019 - MentorCruise</A></DL><p></HTML>';\n\nfunction getFolder($a) {\n    var $node = $a.closest(\"DL\").prev();\n    var title = $node.text()\n    return ($node.length > 0 && title.length > 0) ? [title].concat(getFolder($node)) : [];\n}\n\nexport { parseBookmarkHtml, generateBookmarkHtml };","export const validURL = (str) => {\n    var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n      '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n    return !!pattern.test(str);\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { yellow, blueGrey } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Divder from '@material-ui/core/Divider';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { Query, Mutation } from 'react-apollo';\nimport { ADD_BOOKMARK_MUTATION } from '../graphql/mutations';\nimport { validURL } from './../utils/urlValidateUtils'\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        backgroundColor: \"#C0A5FF\",\n        '&:hover': {\n            backgroundColor: \"#6B77E0\",\n        },\n    },\n    dialog: {\n        color: \"#4E5167\"\n    },\n    button: {\n        borderColor: \"#4E5167\",\n        color: \"#4E5167\",\n        borderColor: \"#4E5167\",\n    },\n}));\n\nexport default function Bookmark(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [title, setTitle] = React.useState(\"\");\n    const [url, setUrl] = React.useState(\"\");\n    const [err, setErr] = React.useState('')\n    const { collectionTitle, collectionId} = props\n    var addBookmarkFunc;\n\n    function handleTitleChange(e){\n        setTitle(e.target.value);\n    }\n\n    function handleUrlChange(e){\n        setUrl(e.target.value.trim())\n    }\n\n    function handleClickOpen() {\n        setOpen(true);\n    }\n\n    function handleClose() {\n        setOpen(false)\n        setUrl(\"\")\n    }\n\n    const handleAddBookmark = async e => {\n        e.preventDefault();\n\n        if(validURL(url)){\n            await addBookmarkFunc({\n                variables: {\n                    collectionId: collectionId,\n                    url: url,\n                    title: title.trim()\n                }\n            })\n            setUrl(\"\");\n            setTitle(\"\");\n            setOpen(false)\n            props.onAddBookmark();\n        }\n        else setErr('Url is invalid!!!')\n    }\n\n    return (\n        <div>\n            <Mutation mutation={ADD_BOOKMARK_MUTATION}>\n                {addBookmark => {\n                    addBookmarkFunc = addBookmark;\n                    return(\n                            <div>\n                                <div className=\"animated pulse infinite\">\n                                    <Tooltip title='Add a new bookmark'>\n                                        <Fab aria-label=\"Add\" className={classes.fab} onClick={handleClickOpen}>\n                                            <AddIcon />\n                                        </Fab>\n                                    </Tooltip>\n                                </div>\n\n                                <form onSubmit={handleAddBookmark} id='bookmark'>\n                                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                                    <DialogTitle id=\"form-dialog-title\" className={classes.dialog}>Create new bookmark</DialogTitle>\n                                    <Divder variant='middle' />\n                                    <DialogContent>\n                                        {`Add this page to the collection : ${collectionTitle}`}\n                                    <DialogContentText>\n                                    </DialogContentText>\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"name\"\n                                            label=\"URL\"\n                                            type=\"url\"\n                                            fullWidth\n                                            onChange={handleUrlChange}\n                                            value={url}\n                                            required\n                                            inputProps={\n                                                { required: 'required'}\n                                            }\n                                            helperText={err}\n                                        />\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"name\"\n                                            label=\"Title\"\n                                            type=\"text\"\n                                            fullWidth\n                                            onChange={handleTitleChange}\n                                            value={title}\n                                            helperText='Describe this bookmark'\n                                        />\n                                    \n                                    </DialogContent>\n                                    <DialogActions>\n                                    <Button onClick={handleClose} className={classes.button}>\n                                        Cancel\n                                    </Button>\n                                    <Button type='submit' form='bookmark' className={classes.button}>\n                                        Create\n                                    </Button>\n                                    </DialogActions>\n                                </Dialog>\n                                </form>\n                            </div>\n                    )\n                }}\n            </Mutation>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { yellow, blueGrey } from '@material-ui/core/colors';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Divder from '@material-ui/core/Divider';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography'\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        backgroundColor: yellow[200],\n        '&:hover': {\n            backgroundColor: yellow[600],\n        },\n    },\n    dialog: {\n        color: \"#4E5167\"\n    },\n    button: {\n        borderColor: blueGrey[100],\n        color: \"#4E5167\",\n        borderColor: \"#4E5167\",\n    },\n    div1: {\n        display: 'flex',\n        direction: 'row',\n        alignItems: 'center'\n    }\n}));\n\nexport default function CommentReply(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const { author, text, time }  = props.comment\n\n\n    function handleClickOpen() {\n        setOpen(true);\n    }\n\n    function handleClose() {\n        setOpen(false);\n    }\n\n    return (\n        <div>\n        <Tooltip title={`Inbox ${author.name}`}>\n            <IconButton aria-label=\"Reply comments\" onClick={handleClickOpen}>\n              <MoreVertIcon />\n            </IconButton>\n        </Tooltip>\n        \n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\" className={classes.dialog}>\n                <div className={classes.div1}>\n                <Avatar src={author.avatar}/>\n                {`Reply comments from ${author.name}.`}\n                </div>\n                \n            </DialogTitle>\n            <Divder variant='middle' />\n            <DialogContent>\n                <Typography variant='body2' color='textSecondary'> #Comments </Typography>\n                <Typography variant='body1' color='textPrimary'> {text} </Typography>\n            <DialogContentText>\n            </DialogContentText>\n\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                id='reply'\n                label=\"Reply\"\n                type=\"text\"\n                fullWidth\n                multiline\n            />\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={handleClose} className={classes.button}>\n                Cancel\n            </Button>\n            <Button onClick={event => {\n                handleClose();\n                console.log('submit reply to others')\n            }} className={classes.button}>\n                Submit\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { red } from '@material-ui/core/colors';\nimport DoneIcon from '@material-ui/icons/Done';\n\n\nimport CommentReply from './CommentReply';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: '100%'\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function CommentCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const { author, text, time } = props.comment\n\n  function handleExpandClick() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"Author Icon\" src={author.avatar} className={classes.avatar} />\n        }\n        action={\n          <CommentReply comment={props.comment} />\n        }\n        title={author.name}\n      />\n      <Divider variant='inset' />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {text}\n        </Typography>\n      </CardContent>\n      <Divider variant='middle'></Divider>\n      <CardActions disableSpacing>\n        <IconButton className={classes.doneIcon} aria-label=\"Have Replied\">\n          <DoneIcon />\n        </IconButton>\n        <Typography variant='body2' color='textSecondary'> {`commented at ${time}`} </Typography>\n      </CardActions>\n    </Card>\n  );\n}","import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blueGrey } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nimport BookmarksTable from './BookmarksTable';\nimport BookmarksAdd from './BookmarksAdd';\nimport CommentCard from './CommentCard';\n\nimport { COLLECTIONSTATE } from '../globalEnum';\nimport { Query, Mutation } from 'react-apollo';\nimport { UPDATE_COLLECTION_MUTATION, DELETE_COLLECTION_MUTATION } from '../graphql/mutations';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'left',\n      display: 'column',\n      justifyContent: 'center',\n      color: theme.palette.text.secondary,\n      width: '90%',\n      margin: \"0 auto\"\n    },\n    textField: {\n        borderColor: \"#4E5167\",\n        color: \"#4E5167\",\n        outlineColor:  \"#4E5167\",\n        '&:hover': {\n            color: \"#4E5167\",\n        },\n    },\n    typography :{\n        fontSize: \"1.5em\",\n        color: \"#4E5167\",\n        fontSize: '2em',\n        fontFamily: 'Quicksand'\n    },\n    typoStar: {\n        paddingRight: '10px'\n    },\n    chip: {\n        margin: theme.spacing(1),\n        backgroundColor: blueGrey[100],\n    },\n    button: {\n        color: \"#4E5167\",\n        borderColor: \"#4E5167\",\n    },\n    deletedButton:{\n        backgroundColor: \"red\",\n        color: \"white\",\n    },\n    div: {\n        display: 'flex', \n        justifyContent: 'left',\n        marginRight: 'auto'\n    },\n    div1: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        //paddingBottom: '10px'\n        width: \"100%\"\n    },\n    div2: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    div3: {\n        display: 'flex', \n        justifyContent: 'left',\n        marginRight: 'auto'\n    },\n    div4: {\n        display: 'flex',\n        direction: 'row',\n        alignItems: 'center'\n    },\n    div5 : {\n        width: '100%',\n        height: '15px',\n    },\n    titleInput: {\n        fontFamily: \"Quicksand\",\n        fontSize: \"2em\",\n        color: \"#4E5167\",\n    },\n    descriptionInput: {\n        width: \"50%\"\n    }\n  }));\n\nexport default function CollectionCard(props) {\n    const classes = useStyles();\n    const {id, title, description, bookmarks, tags, publishedTime, state} = props.collection\n    \n    const [searchVal, setSearchVal] = React.useState(\"\");\n    const [titleVal, setTitleVal] = React.useState(title);\n    const [descriptionVal, setDescrptionVal] = React.useState(description);\n    const [stateVal, setStateVal] = React.useState(state);\n    const [publishTimeVal, setPublishTimeVal] = React.useState(publishedTime);\n    const [deleteBool, setDeleteBool] = React.useState(false);\n    const [onChange, setChange] = React.useState(false);\n\n\n    React.useEffect(() => {\n        setStateVal(props.collection.state);\n        setTitleVal(props.collection.title);\n        setDescrptionVal(props.collection.description);\n        setPublishTimeVal(props.collection.publishedTime);\n    }, [props.collection.state, \n        props.collection.title, \n        props.collection.description,\n        props.collection.publishedTime\n    ]);\n\n    var updateCollectionFunc;\n    var deleteCollectionFunc\n\n    const handleChange = e => {\n        setSearchVal(e.target.value);\n        setChange(true);\n    }\n\n    const handleTitleChange = e => {\n        setTitleVal(e.target.value);\n        setChange(true);\n    }\n\n    const handleDescriptionChange = e => {\n        setDescrptionVal(e.target.value);\n        setChange(true);\n    }\n\n    const handleDelete = e => {\n        setDeleteBool(true);\n        setChange(true);\n    }\n\n    const toggleState = () => {\n        if(stateVal === COLLECTIONSTATE.PUBLISHED){\n            setPublishTimeVal(null);\n            setStateVal(COLLECTIONSTATE.PRIVATE);\n        }\n        if(stateVal === COLLECTIONSTATE.PRIVATE){\n            const now = new Date()\n            setPublishTimeVal(now.toLocaleString());\n            setStateVal(COLLECTIONSTATE.PUBLISHED);\n        }\n        setChange(true);\n    }\n\n    const handleCollectionUpdate = e => {\n        //e.preventDefault();\n        //if(!titleVal || !descriptionVal) return;\n\n        console.log(id, stateVal, titleVal, descriptionVal, publishTimeVal);\n        //console.log(id, stateVal, titleVal, descriptionVal, deleteBool);\n        console.log(deleteBool)\n        updateCollectionFunc({\n            variables: {\n                collectionId: id.toString(),\n                title: titleVal,\n                description: descriptionVal,\n                state: stateVal,\n                publishedTime: publishTimeVal\n            }\n        })\n        if(deleteBool)\n            deleteCollectionFunc({\n                variables: {\n                    collectionId: id.toString(),\n                }\n            })\n        props.onSaveUpdate();\n        setChange(false);\n    }\n\n    return (\n      <div style={{width:\"100%\"}}className={classes.root}>\n          <Mutation mutation={UPDATE_COLLECTION_MUTATION}>\n              {updateCollection => {\n                  updateCollectionFunc = updateCollection;\n                    return(\n                        <Mutation mutation={DELETE_COLLECTION_MUTATION}>\n                            {\n                                deleteCollection => {\n                                    deleteCollectionFunc = deleteCollection\n                                    return(\n                                        <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                                        <Grid container xs={12} sm={12}> \n                                            <Paper className={classes.paper}>\n                                                <Grid item xs={12}>     \n                                                    <div className={classes.div1}>\n                                                        <div className={classes.div}>\n                                                            <TextField \n                                                                value={titleVal}\n                                                                InputProps={{\n                                                                    classes: {\n                                                                    input: classes.titleInput\n                                                                    },\n                                                                }}\n                                                                onChange={handleTitleChange}\n                                                            />\n                                                            </div>\n                                                        {/*<Tooltip title='Number of likes'>\n                                                            <FavoriteIcon />\n                                                        </Tooltip>\n                                                        <Typography variant='h6' className={classes.typoStar} > {'X' + likes} </Typography>\n                                                        */}\n                                                        <TextField\n                                                            id=\"outlined-search\"\n                                                            placeholder='Search in Collection'\n                                                            type=\"search\"\n                                                            className={classes.textField}\n                                                            margin=\"normal\"\n                                                            variant=\"outlined\"\n                                                            InputProps={{\n                                                                startAdornment: <IconButton> <SearchIcon /> </IconButton>\n                                                            }}\n                                                            InputLabelProps={{\n                                                                shrink: true,\n                                                            }}\n                                                            onChange={handleChange}\n                                                            value={searchVal}\n                                                        />\n                                                    </div>\n                                                    <Typography variant='body2' color='textSecondary' paragraph>\n                                                        Tags\n                                                        {tags.map(tag => \n                                                            <Chip\n                                                            size=\"small\"\n                                                            label={tag}\n                                                            clickable\n                                                            className={classes.chip}\n                                                        />)}\n                                                        <Divider variant='middle'/>\n                                                    </Typography>\n                                                    <Typography variant='body2' color='textSecondary' > Published Date </Typography>\n                                                    <Typography variant='body1' color='textPrimary' paragraph>\n                                                        <div className={classes.div3}>\n                                                            <div className={classes.div3}> {publishedTime} </div>\n                                                            <Tooltip title={`Make \\'${title}\\' go ${(stateVal === COLLECTIONSTATE.PRIVATE ? \"public\" : \"private\")}`}>\n                                                                <Button variant='outlined' size='medium' className={classes.button} onClick={toggleState}>\n                                                                    {(stateVal === COLLECTIONSTATE.PRIVATE)? \"Publish\" : \"Archive\"}\n                                                                </Button>\n                                                            </Tooltip>\n                                                            <div style={{marginLeft: \"2%\"}}></div>\n                                                            <Tooltip title={`Delete collection  \\'${title}\\'`}>\n                                                                <Button \n                                                                    variant='outlined' \n                                                                    size=\"medium\" \n                                                                    className={deleteBool?classes.deletedButton+\" animated flash infinite\":classes.button}\n                                                                    onClick={handleDelete}\n                                                                >\n                                                                    {deleteBool?\"Deleted!\":\"Delete\"}\n                                                                </Button>\n                                                            </Tooltip>\n                                                            <div style={{marginLeft: \"2%\"}}></div>\n                                                            <Tooltip title=\"Save changes to collection\">    \n                                                                <div className={onChange?\"animated infinite flash slow\":\"\"}>\n                                                                    <Button \n                                                                        variant='outlined' \n                                                                        size=\"medium\" \n                                                                        className={classes.button}\n                                                                        onClick={handleCollectionUpdate}\n                                                                    >\n                                                                        Save\n                                                                    </Button>\n                                                                </div>\n                                                            </Tooltip>\n                                                        </div>\n                                                    </Typography>\n                                                    <Typography variant='body2' color='textSecondary'> Description </Typography>\n                                                    <TextField \n                                                        value={descriptionVal}\n                                                        onChange={handleDescriptionChange}\n                                                        className={classes.descriptionInput}\n                                                        multiline={true}\n                                                    />\n                                                    <div className={classes.div2}>\n                                                        <div className={classes.div3}> <Typography variant='body2' color='textSecondary'> Bookmarks </Typography> </div>               \n                                                        <BookmarksAdd\n                                                            collectionId={id} \n                                                            onAddBookmark={props.onAddBookmark} \n                                                            collectionTitle={title}\n                                                        />\n                                                    </div>\n                                                    <BookmarksTable \n                                                        filterStr={searchVal} \n                                                        bookmarks={bookmarks} \n                                                        onDeleteBookmark={props.onDeleteBookmark}\n                                                        isSelf={true}>\n                                                    </BookmarksTable>\n                                                </Grid>\n                                            </Paper>  \n                                        </Grid>\n                                        {/*<Grid item xs={12} sm={4}>\n                                            <Paper className={classes.paper}>\n                                                <Typography variant='h4' className={classes.typography}> Comments </Typography>\n                                                <Typography variant='body2' color='textSecondary' paragraph > From others to improve your collections. </Typography>\n                                                <Divider variant='middle'></Divider>\n                                                <Grid item xs={12} spacing={2}>\n                                                {   \n                                                    comments.map(comment => <>\n                                                        <div className={classes.div5}> </div>\n                                                        <CommentCard comment={comment} /> </>)\n                                                }\n                                                </Grid>\n                                            </Paper>\n                                            </Grid>*/}\n                                        </Grid>\n                                      )\n                                }\n                            }\n                        </Mutation>\n                    )\n              }}\n        </Mutation>\n      </div>\n    );\n  }","import React from 'react';\nimport { Query, Mutation } from 'react-apollo'\nimport { MY_PROFILE_QUERY, ADD_COLLECTION_QUERY } from './../graphql/queries'\nimport { IMPORT_COLLECTIONS_MUTATION, ADD_COLLECTION_MUTATION } from './../graphql/mutations'\nimport { ADD_BOOKMARK_SUBSCRIPTION, DELETE_BOOKMARK_SUBSCRIPTION} from '../graphql/subscriptions';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListIcon from '@material-ui/icons/List';\nimport FavoriteIcon from '@material-ui/icons/Star';\nimport PrivateIcon from '@material-ui/icons/Archive';\nimport PublicIcon from '@material-ui/icons/LibraryBooks';\nimport AccountIcon from '@material-ui/icons/AccountCircleOutlined';\nimport AddIcon from '@material-ui/icons/NoteAdd';\n\nimport List from '@material-ui/core/List'; \nimport './UserProfile.css';\nimport { ListItem, Button } from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Export from '@material-ui/icons/CloudDownload';\nimport Import from '@material-ui/icons/CloudUpload';\nimport Collapse from '@material-ui/core/Collapse';\nimport TextField from '@material-ui/core/TextField'\nimport { parseBookmarkHtml, generateBookmarkHtml } from '../utils/bookmarkUtils';\n\nimport CollectionCard from '../components/CollectionCard';\nimport UserCollection from '../components/UserCollection'\nimport { COLLECTIONSTATE } from '../globalEnum';\nimport TextWrapper from './../components/TextWrapper'\n\nvar FileSaver = require('file-saver');\nlet addBookmarkSubscribe = null;\nlet deleteBookmarkSubscribe = null;\n\n\nconst styles = {\n    avatar: {\n        width: \"260px\",\n        height: \"260px\"\n    },\n    icon: {\n        fontSize: \"20px\"\n    },\n    list: {\n        maxHeight: \"70%\", \n        width: \"80%\", \n        overflow: \"auto\",\n        marginBottom: \"10%\",\n    },\n    listItem: {\n        fontSize: \"18px\",\n        fontFamily: \"Quicksand\",\n        fontWeight: \"100\",\n        marginLeft: \"10%\",\n    },\n    listItemIcon: {\n        marginRight: \"10%\"\n    },\n    listItemText: {\n        width: \"50%\",\n    },\n    listItemNum: {\n        marginRight: \"10%\",\n        marginLeft: \"auto\",\n        color: \"rgb(183, 183, 183)\"\n    },\n    leftAlign: {\n        marginRight: \"auto\",\n        marginLeft: \"50px\"\n    },\n    button: {\n        width: \"80%\",\n        margin: \"0 auto\",\n        fontWeight: \"100\",\n        backgroundColor: \"rgb(239, 239, 239)\"\n    },\n    textField: {\n        width: \"80%\",\n        marginBottom: \"10px\"\n    }\n}\n\nclass MyProfile extends React.Component {\n    constructor(props){\n        super(props)\n    }\n    state = {\n        userID: this.props.id ? this.props.id : this.props.location.id,\n        currCollectionId: undefined,\n        open: {\n            'private': true,\n            'published': false,\n            'favorite': false\n        },\n        favoriteCollectionId: \"\",\n    }\n    importCollectionsFunc\n    addCollectionFunc\n    addCollectionRefetch\n\n\n    componentDidMount(){\n        if(this.refetch) this.refetch();\n    }\n    \n    chooseCollection = id => {\n        this.setState({\n            currCollectionId: id,\n        })\n    }\n\n    handleOpen = type => {\n        const prevOpen = this.state.open;\n        prevOpen[type] = !prevOpen[type];\n        this.setState({\n            open: prevOpen,\n        })\n    }\n\n    onImport = event => {\n        const file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onload = async event => {\n            var text = reader.result;\n            const uploaded = parseBookmarkHtml(text);\n            await this.importCollectionsFunc({\n                variables: {\n                    userID: this.state.userID,\n                    collections: uploaded\n                }\n            })\n            this.refetch();\n        }\n        reader.readAsText(file);\n    }\n\n    onExport = collections => {\n        const text = generateBookmarkHtml(collections);\n        var blob = new Blob([text], {type: \"text/plain;charset=utf-8\"});\n        FileSaver.saveAs(blob, `bookmark.html`);\n    }\n\n    hanleAddCollection = event => {\n        console.log(event.target)\n        this.setState({\n            favoriteCollectionId: event.target.value\n        })\n    }\n    onAddCollection = (collection) => {\n        console.log(\"Add collection\")\n        console.log(\"userID\",this.state.userID)\n        console.log(\"collection\", collection)\n        this.addCollectionFunc({\n            variables: {\n                userID: this.state.userID,\n            }\n        })\n        this.refetch();\n    }\n\n\n   onDeleteBookmark = () => {\n       console.log(\"delete bookmark\");\n\n       this.refetch();\n   }\n\n   onAddBookmark = () => {\n       this.refetch();\n   }\n\n   onClickStore = () => {\n       this.refetch();\n   }\n\n\n   onSaveUpdate = () => {\n       console.log(\"updated!\");\n       this.refetch();\n   }\n   \n    render(){\n        //const privateCollection = this.state.collections.filter(collection => collection.state === COLLECTIONSTATE.PRIVATE);\n        //const publishedCollection = this.state.collections.filter(collection => collection.state === COLLECTIONSTATE.PUBLISHED)\n        //const collection = this.state.collections.find(collection => collection.id == this.state.currCollection);\n        //if(this.refetch) this.refetch();\n        console.log(\"in myprogile\", this.props.id);\n        const userID = (this.props.id) ? this.props.id : this.props.location.id;\n        return(\n            <Query query={MY_PROFILE_QUERY} variables={{userID: userID}} >\n            { ({ loading, error, data, subscribeToMore, refetch}) => {\n                console.log(\"data\", data);\n                this.refetch = refetch\n                if (loading) return <p>Loading...</p>\n                if (error) return <p>Error :(((</p>\n                var { name, avatar, collections } = data.user\n                console.log(collections)\n\n                const privateCollection   = collections.filter(collection => collection.state === COLLECTIONSTATE.PRIVATE)\n                const publishedCollection = collections.filter(collection => collection.state === COLLECTIONSTATE.PUBLISHED)\n                const favoriteCollection  = collections.filter(collection => collection.state === COLLECTIONSTATE.FAVORITE)\n                const collection = collections.find(collection => collection.id === this.state.currCollectionId);\n\n                let renderElem;\n                if(collection){\n                    if(collection){\n                        if(collection.state === COLLECTIONSTATE.FAVORITE)\n                            renderElem = <UserCollection onClickStore={this.onClickStore} whoAmI='Me' collection={collection}/>\n\n                        else renderElem = <CollectionCard \n                            collection={collection} \n                            onDeleteBookmark={this.onDeleteBookmark}\n                            onAddBookmark={this.onAddBookmark}\n                            onSaveUpdate={this.onSaveUpdate}\n                        />\n                    }\n                }\n                else renderElem = <div />\n                \n                return(\n                    <div className=\"UserProfile animated fadeIn slow\">\n                        <div className=\"UserProfile-flex-container\">\n                            <div className=\"UserProfile-margin-block\" ></div>\n                            <div className=\"UserProfile-left\" >\n                                <div className=\"inner-container\">\n                                    {\n                                        avatar?\n                                        <Avatar src={avatar} style={styles.avatar}/>:\n                                        <Avatar style={styles.avatar}><AccountIcon style={styles.avatar}/></Avatar>\n                                    }\n                                    <div className=\"follows-container\">\n                                        <div className=\"top-block\">{name}</div>\n                                        <div className=\"block\">\n                                            <div><ListIcon style={styles.icon} /></div>\n                                            <div style={styles.leftAlign}>{collections.length} collections</div>\n                                        </div>\n                                        <div className=\"block\">\n                                            <div><ListIcon style={styles.icon} /></div>\n                                            <div style={styles.leftAlign}>{privateCollection.length} private</div>\n                                        </div>\n                                        <div className=\"block\">\n                                            <div><ListIcon style={styles.icon} /></div>\n                                            <div style={styles.leftAlign}>{publishedCollection.length} published</div>\n                                        </div>\n                                        <div className=\"block\">\n                                            <div><ListIcon style={styles.icon} /></div>\n                                            <div style={styles.leftAlign}>{favoriteCollection.length} favorite</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"public-card-container\">\n                                    { renderElem }\n                                </div>\n                            </div>\n                            <div className=\"UserProfile-right\" >\n                                <div className=\"top-block\">Collections</div>\n                                <List style={styles.list}>\n                                    <ListItem button onClick={() => this.handleOpen('private')}>\n                                        <PrivateIcon style={styles.listItemIcon}/> Private\n                                        {this.state.open['private'] ? <ExpandLess /> : <ExpandMore />}\n                                    </ListItem>\n                                    <Collapse in={this.state.open['private']} timeout=\"auto\" unmountOnExit>\n                                        <List>\n                                            {\n                                                privateCollection.map(\n                                                    (item, idx )=> \n                                                    <ListItem \n                                                        button \n                                                        key={idx}\n                                                        style={styles.listItem}\n                                                        onClick={() => this.chooseCollection(item.id)}\n                                                    >\n                                                        <div style={styles.listItemText}>{item.title}</div>\n                                                        <div style={styles.listItemNum}>{item.bookmarks.length}</div>\n                                                    </ListItem>\n                                                )\n                                            }\n                                        </List>\n                                    </Collapse>\n                                    <ListItem button onClick={() => this.handleOpen('published')}>\n                                        <PublicIcon style={styles.listItemIcon}/> Published\n                                        {this.state.open['published'] ? <ExpandLess /> : <ExpandMore />}\n                                    </ListItem>\n                                    <Collapse in={this.state.open['published']} timeout=\"auto\" unmountOnExit>\n                                        <List>\n                                            {\n                                                publishedCollection.map(\n                                                    (item, idx )=> \n                                                    <ListItem \n                                                        button \n                                                        key={idx}\n                                                        style={styles.listItem}\n                                                        onClick={() => this.chooseCollection(item.id)}\n                                                    >\n                                                        <div style={styles.listItemText}>{item.title}</div>\n                                                        <div style={styles.listItemNum}>{item.bookmarks.length}</div>\n                                                    </ListItem>\n                                                )\n                                            }\n                                        </List>\n                                    </Collapse>\n                                    <ListItem button onClick={() => this.handleOpen('favorite')}>\n                                        <FavoriteIcon style={styles.listItemIcon}/>Favorite\n                                        {this.state.open['favorite'] ? <ExpandLess /> : <ExpandMore />}\n                                    </ListItem>\n                                    <Collapse in={this.state.open['favorite']} timeout=\"auto\" unmountOnExit>\n                                        <List>\n                                            {\n                                                favoriteCollection.map(\n                                                    (item, idx )=> \n                                                    <ListItem \n                                                        button \n                                                        key={idx}\n                                                        style={styles.listItem}\n                                                        onClick={() => this.chooseCollection(item.id)}\n                                                    >\n                                                        <div style={styles.listItemText}>{item.title}</div>\n                                                        <div style={styles.listItemNum}>{item.bookmarks.length}</div>\n                                                    </ListItem>\n                                                )\n                                            }\n                                        </List>\n                                    </Collapse>\n                                </List>\n                                <Mutation mutation={IMPORT_COLLECTIONS_MUTATION}>\n                                {   importCollections => {\n                                        this.importCollectionsFunc = importCollections\n                                        return(\n                                            <div style={{width:\"100%\", marginBottom: \"10px\"}}>\n                                                <input\n                                                    type=\"file\"\n                                                    accept=\".html\"\n                                                    style={{ display: 'none' }}\n                                                    id=\"import-bookmarks\"\n                                                    onChange={this.onImport}\n                                                />\n                                                <label htmlFor=\"import-bookmarks\">\n                                                    <Button style={styles.button}>\n                                                        Import Bookmarks<Import style={{marginLeft: \"10%\"}}/>\n                                                    </Button>\n                                                </label>\n                                            </div>\n                                        )\n                                    }\n                                }\n                                </Mutation>\n                                <div style={{width:\"100%\", marginBottom: \"10px\"}}>\n                                    <Button onClick={() => this.onExport(collections)} style={styles.button}>\n                                        Export Bookmarks<Export style={{marginLeft: \"10%\"}}/>\n                                    </Button>\n                                </div>\n                                <Mutation mutation={ADD_COLLECTION_MUTATION}>\n                                {   addCollection => {\n                                        this.addCollectionFunc = addCollection\n                                        return(\n                                            <>\n                                                <div style={{width:\"100%\", marginBottom: \"10px\"}}>\n                                                    <Button onClick={event => this.onAddCollection()} style={styles.button}>\n                                                        Create New Collection<AddIcon style={{marginLeft: \"10%\"}}/>\n                                                    </Button>\n                                                </div>\n                                            </>\n                                        )\n                                    }  \n                                }\n                                </Mutation>\n                            </div> \n                        </div>\n                    </div>\n                    )\n                }  \n            }\n            </Query>\n        )\n    }\n}\n\nexport default MyProfile;","import React from 'react';\nimport { Avatar, Typography } from '@material-ui/core';\nimport AccountIcon from '@material-ui/icons/AccountCircleOutlined';\n\nimport { Card, CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GotoIcon from '@material-ui/icons/NearMeOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport { NavLink } from 'react-router-dom';\nimport { USER_COLLECTION_QUERY } from '../graphql/queries';\nimport { Query } from 'react-apollo';\nimport { COLLECTIONSTATE } from '../globalEnum';\n\nconst useStyles = makeStyles({\n    card: {\n        width: \"100%\",\n        marginBottom: \"10px\",\n        height: \"120px\"\n    },\n    avatar:{\n        marginTop: \"1rem\",\n        marginBottom: \"1rem\",\n        marginLeft: \"1rem\",\n        marginRight: \"1rem\",\n        height: '4rem',\n        width: \"4rem\",\n    },\n    icon: {\n        fontSize: \"100px\",\n    },\n    iconButton:{\n        width: \"60px\",\n        height: \"60px\",\n        marginTop: \"30px\",\n        marginBottom: \"30px\",\n        border: \"1px solid rgb(224, 224, 224)\",\n    },\n    link: {\n        color: \"rgb(173, 173, 173)\"\n    }\n});\n\nexport default function UserCard(props){\n    const classes = useStyles();\n    const { currentUserId, user } = props\n    //console.log(user.avatar);\n\n    const avatar = user.avatar ? \n        <Avatar className={classes.avatar} src={user.avatar} />:\n        <Avatar className={classes.avatar}><AccountIcon className={classes.icon}/></Avatar>;\n\n    \n    return(\n        <Query query={USER_COLLECTION_QUERY} variables={{userID: user.id}}>\n            {({data}) => {\n                let length = 0;\n                if(data.user) length = data.user.collections.filter(collection => collection.state === COLLECTIONSTATE.PUBLISHED).length;\n                return(\n                    <Card className={classes.card}>\n                        <CardContent>\n                            <div className=\"flex-container\">\n                                <div >{avatar}</div>\n                                <div className=\"user-info\">\n                                    <div className=\"user-name\"> {user.name} </div>\n                                    <div className=\"user-collections\">{length} collections</div>\n                                </div>\n                                <div className=\"button-container animated pulse infinite\">\n                                    <IconButton \n                                        className={classes.iconButton}\n                                    >\n                                        {\n                                            currentUserId === user.id ?\n                                            <NavLink \n                                                to={`/myprofile`} \n                                                className={classes.link}\n                                            >\n                                                    <GotoIcon/>\n                                            </NavLink>:\n                                            <NavLink \n                                                to={`/user/${user.id}`} \n                                                className={classes.link}\n                                            >\n                                                <GotoIcon/>\n                                            </NavLink>\n                                        }\n                                        \n                                    </IconButton>\n                                </div>\n                            </div>\n                        </CardContent>\n                        \n                    </Card>\n                )\n            }}\n        </Query>\n        \n    )\n}\n","import React from 'react';\nimport UserCard from '../components/UserCard';\nimport { Query } from 'react-apollo';\nimport { SEARCH_USERS_QUERY, SEARCH_USERS_COLLECTIONS_QUERY } from '../graphql/queries';\nimport './UserSearchResults.css';\n\nclass UserSearchResults extends React.Component {\n    render(){\n        const { currentUserId, searchStr } = this.props\n        return(\n            <Query query={ SEARCH_USERS_QUERY } variables={{name: searchStr}}>\n                { ({ loading, error, data, subscribeToMore, refetch}) => {\n                    console.log(searchStr);\n                    console.log(\"result\", data);\n                    return(\n                        <div className=\"page animated fadeIn slow\">\n                            <div className=\"title-container\">Search Results</div>\n                            <div className=\"lower-container\">\n                                {\n                                    data.users?\n                                    data.users.map((user, idx) => <UserCard currentUserId={currentUserId} user={user} key={idx} />)\n                                    :<div />   \n                                }\n                            </div>\n                        </div>\n                    )\n                }}\n            </Query>\n        )\n    }\n}\n\nexport default UserSearchResults;\n\n","import React from 'react';\nimport './App.css';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport TextField from '@material-ui/core/TextField';\nimport TextWrapper from './components/TextWrapper';\nimport Feeds from './containers/Feeds';\nimport UserProfile from './containers/UserProfile';\nimport MyProfile from './containers/MyProfile'\nimport UserSearchResults from './containers/UserSearchResults';\n\nimport { Switch, Route, NavLink } from 'react-router-dom';\n\nconst styles = {\n  button: {\n    backgroundColor: \"rgb(239, 239, 239)\",\n    height: \"54px\",\n    width: \"15%\",\n    marginLeft: \"1%\",\n    marginRight: \"1%\",\n    fontFamily: \"Quicksand\"\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"black\"\n  },\n  buttonLink:{\n    color: \"rgb(173, 173, 173)\"\n  },\n  avatar: {\n    marginLeft: \"2%\",\n    marginRight: \"5%\",\n    width: \"54px\",\n    height: \"54px\"\n  },\n  textField: {\n    width: \"100%\",\n  },\n}\n\n\nclass App extends React.Component {\n\n  state = {\n    searchValue: \"\"\n  }\n\n  handleSearchChange = event => {\n    this.setState({\n      searchValue: event.target.value,\n    })\n  }\n\n  clickSearch = () => {\n    //alert(\"ehllo!\");\n  }\n\n  render(){\n    console.log(this.props.userID);\n    //localStorage.setItem('login', \"true\");\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <Avatar src=\"images/icon.jpg\" style={styles.avatar} />\n          <Button style={styles.button}>\n              <NavLink to=\"/feeds\" style={styles.link}>Feeds</NavLink>\n          </Button>\n          <Button style={styles.button}>\n              <NavLink to=\"/myprofile\" style={styles.link}>My Profile</NavLink>\n          </Button>\n          <Button style={styles.button} onClick={this.props.onLogout}>\n              <NavLink to=\"/\" style={styles.link}>Logout</NavLink>\n          </Button>\n          <div className=\"App-input\">\n              <TextField\n                label=\"Search...\"\n                variant=\"outlined\"\n                style={styles.textField}\n                value={this.state.searchValue}\n                onChange={this.handleSearchChange}\n                InputProps={{\n                    endAdornment: (\n                      <InputAdornment>\n                        <IconButton onClick={this.clickSearch}>\n                          <NavLink style={styles.buttonLink} to=\"/search\"><SearchIcon/></NavLink>\n                        </IconButton>\n                      </InputAdornment>\n                    )\n                }}\n              />\n          </div>\n        </div>\n        <Switch>\n          <Route \n            exact path=\"/\"\n            render={props => \n              <Feeds \n                id={this.props.userID}\n                {...props}\n              />\n            }\n          />\n          <Route \n            exact path=\"/feeds\"\n            render={props => \n              <Feeds \n                id={this.props.userID}\n                {...props}\n              />\n            }\n          />\n          <Route \n            exact path=\"/myprofile\"\n            render={props => \n              <MyProfile \n                id={this.props.userID}\n                {...props} \n              />}\n          />\n          <Route\n            exact path=\"/user/:id\"\n            render={\n              props=>\n              <UserProfile\n                currentUserId={this.props.userID}\n                {...props}\n            />}\n          />\n          <Route\n            exact path=\"/search\"\n            render={\n              props=>\n                <UserSearchResults \n                  searchStr={this.state.searchValue} \n                  currentUserId={this.props.userID}\n                  {...props}\n                />\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport TextWrapper from '../../components/TextWrapper';\nimport Button from '@material-ui/core/Button';\nimport \"./Login.css\";\nimport { NavLink } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\nimport { LOGIN_MUTATION } from '../../graphql/mutations';\nconst validator = require('validator');\n\nconst styles = {\n    button: {\n        width: \"100%\",\n        fontFamily: \"Quicksand\",\n        fontWeight: \"100\",\n        fontSize: \"15px\",\n    },\n    link: {\n        textDecoration: \"none\",\n        color: \"black\"\n      },\n}\n\nclass Login extends React.Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        emptyEmail: false,\n        emptyPassword: false,\n        invalidEmail: false,\n        loginStatus: \"LOGGED_OUT\"\n    }\n    loginCheckFunc\n\n    onEmailInput = e => {\n        this.setState({\n            email: e.target.value.trim(),\n        })\n        if(e.target.value.length > 0){\n            this.setState({\n                emptyEmail: false\n            })\n        }\n    }\n\n    onPasswordInput = e => {\n        this.setState({\n            password: e.target.value,\n        })\n        if(e.target.value.length > 0){\n            this.setState({\n                emptyPassword: false\n            })\n        }\n    }\n\n    handleLogin = () => {\n        //console.log(\"handling login!\");\n        if(this.validateForm()){\n            //console.log(\"validated login input!\");\n            this.loginCheckFunc({\n                variables: {\n                    email: this.state.email,\n                    password: this.state.password\n                }\n            })\n            //console.log(\"from server: \", data);\n            //this.props.onLogin();\n            return;\n        }\n    }\n\n    validateForm = () => {\n        //console.log(\"validating!\");\n        if(this.state.email.length === 0){\n            this.setState({\n                emptyEmail: true,\n            })\n        }\n        else{\n            if(!validator.isEmail(this.state.email)){\n                this.setState({\n                    invalidEmail: true,\n                })\n            }\n            else{\n                this.setState({\n                    invalidEmail: false,\n                })\n            }\n        }\n        if(this.state.password.length === 0)\n            this.setState({\n                emptyPassword: true,\n            })\n        return (this.state.email.length > 0) && \n                (this.state.password.length > 0) &&\n                    (validator.isEmail(this.state.email));\n    }\n\n    render(){\n        return(\n            <Mutation mutation={LOGIN_MUTATION}>\n                {(loginCheck, {data}) => {\n                    this.loginCheckFunc = loginCheck\n                    let warningMessage = null;\n                    if(data) {\n                        if(data.loginCheck.status === \"SUCCESS\") {\n                            this.props.onLogin(data.loginCheck.id)\n                        }\n                        else{\n                            warningMessage = data.loginCheck.status;\n                        }\n                    }\n                    return(\n                        <div className=\"box\">\n                            <div className=\"input-container animated slideInDown\">\n                                <TextWrapper\n                                    label=\"Email\"\n                                    value={this.state.email}\n                                    handleChange={this.onEmailInput}\n                                />\n                            </div>\n                            <div>\n                                {\n                                    (this.state.emptyEmail)?\n                                        (<div className=\"warning\">Email should not be empty!</div>):\n                                        ((this.state.invalidEmail)?\n                                            (<div className=\"warning\">Invalid email format!</div>):\n                                            ((warningMessage===\"EMAIL_UNEXIST_ERROR\")?\n                                                (<div className=\"warning\">Email does not exist!</div>):\n                                                (<div></div>)\n                                            )\n                                        )\n                                }\n                            </div>\n                            <div className=\"input-container animated slideInDown\">\n                                <TextWrapper \n                                    label=\"Password\"\n                                    value={this.state.password}\n                                    handleChange={this.onPasswordInput}\n                                />\n                            </div>\n                            <div>\n                                {\n                                    (this.state.emptyPassword) ? \n                                    (<div className=\"warning\">Password should not be empty!</div>) : \n                                    ((warningMessage===\"PASSWORD_UNMATCH_ERROR\")?\n                                        <div className=\"warning\">Wrong password!</div>:\n                                        <div></div>)\n                                }\n                            </div>\n                            <div className=\"animated slideInUp\">\n                                <div className=\"button-container animated pulse infinite\">\n                                    <Button style={styles.button} onClick={this.handleLogin}>\n                                        Login\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Mutation>\n            \n        )\n    }\n}\n\nexport default Login;","import React from 'react';\nimport TextWrapper from '../../components/TextWrapper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport AccountIcon from '@material-ui/icons/AccountCircleOutlined';\nimport \"./Login.css\";\nimport { borders } from '@material-ui/system'\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { CREATE_USER_MUTATION } from '../../graphql/mutations';\nimport { Mutation } from 'react-apollo';\nimport uuidv4 from 'uuid/v4';\nconst validator = require('validator');\n\nconst styles = {\n    button: {\n        width: \"100%\",\n        fontFamily: \"Quicksand\",\n        fontWeight: \"100\",\n        fontSize: \"15px\",\n    },\n    avatar: {\n        width: \"200px\",\n        height: \"200px\",\n    }\n}\n\nclass Register extends React.Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        emptyUsername: false,\n        emptyPassword: false,\n        emptyEmail: false,\n        invalidEmail: false,\n        imageUrl: \"\",\n        dataUrl: \"\",\n        successfulRegister: false,\n    }\n\n    createUserFunc\n\n    onUserInput = e => {\n        this.setState({\n            username: e.target.value,\n        })\n        if(e.target.value.length > 0){\n            this.setState({\n                emptyUsername: false\n            })\n        }\n    }\n\n    onPasswordInput = e => {\n        this.setState({\n            password: e.target.value,\n        })\n        if(e.target.value.length > 0){\n            this.setState({\n                emptyPassword: false\n            })\n        }\n    }\n\n    onEmailInput = e => {\n        this.setState({\n            email: e.target.value,\n        })\n        if(e.target.value.length > 0){\n            this.setState({\n                emptyEmail: false\n            })\n        }\n    }\n\n    handleRegister = () => {\n        console.log(\"handling register\");\n        if(this.validateForm()){\n            console.log(\"register!\");\n            this.setState({\n                successfulRegister: true,\n            })\n\n            this.createUserFunc({\n                variables: {\n                    id: uuidv4(),\n                    name: this.state.username,\n                    password: this.state.password,\n                    email: this.state.email,\n                    avatar: this.state.dataUrl,\n                }\n            })\n            \n            console.log(this.state);\n        }\n    }\n\n    validateForm = () => {\n        if(this.state.username.length === 0)\n            this.setState({\n                emptyUsername: true,\n            })\n        if(this.state.password.length === 0)\n            this.setState({\n                emptyPassword: true,\n            })\n        if(this.state.email.length === 0)\n            this.setState({\n                emptyEmail: true,\n            })\n        else{\n            this.setState({\n                invalidEmail: !validator.isEmail(this.state.email),\n            })\n        }\n        return this.state.username.length > 0 && \n                this.state.password.length > 0 && \n                    this.state.email.length > 0 && \n                        validator.isEmail(this.state.email)\n    }\n\n    onUpload = event => {\n\t\tconst file = event.target.files[0];\n\t\tthis.setState({\n\t\t\timageUrl: URL.createObjectURL(file)\n\t\t})\n\t\tconst reader = new FileReader();\n\t\treader.addEventListener(\"load\", () => {\n\t\t\tthis.setState({\n\t\t\t\tdataUrl: reader.result,\n            });\n\t\t})\n\t\treader.readAsDataURL(file);\n\t}\n\n    render(){\n        return(\n            <Mutation mutation={CREATE_USER_MUTATION}>\n                {(createUser, {data}) => {\n                    this.createUserFunc = createUser;\n                    let duplicateEmail = false;\n                    if(data) duplicateEmail = (data.createUser.status === \"DUPLICATE_EMAIL_ERROR\");\n                    if(this.state.successfulRegister && data && !duplicateEmail) return <Redirect to='/'/>;\n                    else{\n                        return(\n                            <div className=\"register-box\">\n                                <div className=\"animated fadeIn delay-2s\" style={{width: \"200px\", margin: \"0 auto\", marginBottom: \"5vh\"}}>\n                                    <input\n                                        accept=\"image/*\"\n                                        style={{ display: 'none' }}\n                                        id=\"upload\"\n                                        type=\"file\"\n                                        onChange={this.onUpload}\n                                    />\n                                    <label htmlFor=\"upload\" className=\"image-upload\">\n                                        {\n                                            (this.state.imageUrl === \"\") ? \n                                            (<Avatar style={styles.avatar}><AccountIcon style={{fontSize:\"200px\"}}/></Avatar>):\n                                            (<Avatar style={styles.avatar} src={this.state.dataUrl} />)\n                                        }  \n                                    </label>\n                                </div>\n                                <div className=\"input-container animated slideInDown\">\n                                    <TextWrapper \n                                        label=\"Username\"\n                                        value={this.state.username}\n                                        handleChange={this.onUserInput}\n                                    />\n                                </div>\n                                <div>{(this.state.emptyUsername) ? (<div className=\"warning\">Username should not be empty!</div>) : (<div></div>)}</div>\n                                <div className=\"input-container animated slideInDown\">\n                                    <TextWrapper \n                                        label=\"Password\"\n                                        value={this.state.password}\n                                        handleChange={this.onPasswordInput}\n                                    />\n                                </div>\n                                <div>{(this.state.emptyPassword) ? (<div className=\"warning\">Password should not be empty!</div>) : (<div></div>)}</div>\n                                <div className=\"input-container animated slideInDown\">\n                                    <TextWrapper \n                                        label=\"Email\"\n                                        value={this.state.email}\n                                        handleChange={this.onEmailInput}\n                                    />\n                                </div>\n                                <div>\n                                    {\n                                        this.state.emptyEmail ? \n                                            (<div className=\"warning\">Email should not be empty!</div>) : \n                                            (\n                                                this.state.invalidEmail?\n                                                    (<div className=\"warning\">Invalid email format!</div>):\n                                                    (duplicateEmail ?\n                                                        <div className=\"warning\">Email has already been taken!</div>:\n                                                        <div></div>\n                                                    )\n                                            )\n                                    }\n                                </div>\n                                <div className=\"animated slideInUp\">\n                                    <div className=\"button-container animated pulse infinite\">\n                                        <Button onClick={() => this.handleRegister()} style={styles.button}>\n                                            Register\n                                        </Button>          \n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                }}\n            </Mutation>\n        )\n    }\n}\n\nexport default Register;","import React from 'react';\nimport Login from '../containers/login/Login';\nimport Register from '../containers/login/Register';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar'\nimport './LoginRegister.css';\n\nconst styles = {\n    button: {\n        width: \"50%\",\n        fontFamily: \"Quicksand\",\n        fontWeight: \"100\",\n        fontSize: \"15px\",\n    },\n    link: {\n        textDecoration: \"none\",\n        color: \"black\"\n    },\n    avatar: {\n        // width: '100px',\n        // height: '100px'\n        width: '10em',\n        height: '10em'\n    }\n}\nclass LoginRegister extends React.Component {\n    render(){\n        const icon_title = <div className=\"icon-title-container\"> \n                                <div className=\"icon\">\n                                    <Avatar style={styles.avatar} src=\"/images/icon.jpg\" />\n                                </div>\n                                <div className=\"title\"> Ethereal </div>\n                                <div className=\"subtitle\">Manage your bookmarks with grace.</div>\n                            </div>\n        return(\n            <body className=\"body-container\">\n                 <div className=\"LoginRegister animated fadeIn\">\n                    <div className=\"left-container\">\n                        <div className=\"navbar\">\n                            <div className=\"button\">\n                                <Button style={styles.button}>\n                                    <NavLink to=\"/login\" style={styles.link}>Login</NavLink>\n                                </Button>\n                            </div>\n                            <div className=\"button\">\n                                <Button style={styles.button}>\n                                    <NavLink to=\"/register\" style={styles.link}>Register</NavLink>\n                                </Button>\n                            </div>\n                        </div>\n                        <Route  exact path=\"/\"\n                                render={props => icon_title}/>\n                        <Route  exact path=\"/login\"\n                                render={props => icon_title}/>\n                        {/* <div className=\"block\"></div> */}\n                        <div className=\"form\">\n                            <Switch>\n                                <Route \n                                    exact path=\"/\"\n                                    render={props => <Login {...props} onLogin={this.props.onLogin} />}\n                                />\n                                <Route \n                                    exact path=\"/login\"\n                                    render={props => <Login {...props} onLogin={this.props.onLogin} />}\n                                />\n                                <Route \n                                    exact path=\"/register\"\n                                    render={props => <Register {...props} />}\n                                />\n                            </Switch>\n                        </div>\n                    </div>\n                    <div className=\"right-container\">\n                        <img src=\"/images/web_final_login.jpg\" />\n                    </div>\n                </div>\n            </body>\n        )\n    }\n}\n\nexport default LoginRegister;","import React from 'react';\nimport App from './App';\nimport LoginRegister from './pages/LoginRegister';\nimport { Route, Redirect } from 'react-router-dom';\n\n\nclass OuterApp extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            loggedIn: false,\n            userID: null,\n        }\n    }\n\n    onLogout = () => {\n        console.log(\"you logged out!\");\n        this.setState({\n            loggedIn: false,\n        })\n        sessionStorage.setItem('login', 'false');\n        console.log(\"After logout: \", sessionStorage.getItem('login'));\n    }\n    \n    onLogin = id => {\n        console.log(\"you logged in!\");\n        this.setState({\n            loggedIn: true,\n            userID: id,\n        })\n        sessionStorage.setItem('login', 'true');\n        sessionStorage.setItem('userID', id);\n        console.log(\"After login: \", sessionStorage.getItem('login'));\n    }\n\n    render(){\n        const login = sessionStorage.getItem('login');\n        const userID = sessionStorage.getItem('userID');\n        console.log(login);\n        return(\n            (login===\"true\")? <App userID={userID} onLogout={this.onLogout}/>:<LoginRegister onLogin={this.onLogin}/>\n        )\n    }\n}\n\nexport default OuterApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache } from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport { split } from 'apollo-link'\nimport { HttpLink } from 'apollo-link-http'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { getMainDefinition } from 'apollo-utilities'\nimport './index.css';\nimport OuterApp from './OuterApp';\nimport * as serviceWorker from './serviceWorker';\n// Create an http link:\nconst httpLink = new HttpLink({\n    uri: 'http://localhost:4000/'\n  })\n  \n  // Create a WebSocket link:\nconst wsLink = new WebSocketLink({\n    uri: `ws://localhost:4000/`,\n    options: { reconnect: true }\n  })\n  \n  // using the ability to split links, you can send data to each link\n  // depending on what kind of operation is being sent\nconst link = split(\n    // split based on operation type\n    ({ query }) => {\n      const definition = getMainDefinition(query)\n      return (\n        definition.kind === 'OperationDefinition' &&\n        definition.operation === 'subscription'\n      )\n    },\n    wsLink,\n    httpLink\n  )\n  \nconst client = new ApolloClient({\n    link,\n    cache: new InMemoryCache().restore({})\n  })\n\n//localStorage.setItem('login', 'false');\n\nconst wrappedApp = (\n    <ApolloProvider client={client}>\n        <BrowserRouter>\n            <OuterApp/>\n        </BrowserRouter>\n    </ApolloProvider>\n  )\n\nReactDOM.render(wrappedApp, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}